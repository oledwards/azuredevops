# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: AWSCLI@1
  inputs:
    awsCredentials: 'AWS-Connection-Nonprod'
    regionName: 'eu-central-1'
    awsCommand: 'elbv2'
    awsSubCommand: 'describe-load-balancers'
    awsArguments: '--names alb-stack-LoadBalancer'
- task: AWSShellScript@1
  inputs:
    awsCredentials: 'AWS-Connection-Nonprod'
    regionName: 'eu-central-1'
    scriptType: 'inline'
    inlineScript: |
      aws elbv2 describe-load-balancers --names alb-stack-LoadBalancer > /tmp/alb.json
      export ALBArn="$['LoadBalancers'][0]['DNSName']"
      echo "${ACLArn}"

# - script: echo Hello, world!
#   displayName: 'Run a one-line script'
# - task: S3Upload@1
#   inputs:
#     awsCredentials: 'AWS-S3-Connection'
#     regionName: 'eu-west-2'
#     bucketName: 'mytestazuredevopsbucket'
#     globExpressions: '*.yml'
#     targetFolder: 'testfolder'
# - task: CloudFormationCreateOrUpdateStack@1
#   inputs:
#     awsCredentials: 'AWS-S3-Connection'
#     regionName: 'eu-west-2'
#     stackName: 'vpc-stack'
#     templateSource: 'file'
#     templateFile: 'vpc_stack.yml'
# - task: CloudFormationDeleteStack@1
#   inputs:
#     awsCredentials: 'AWS-S3-Connection'
#     regionName: 'eu-west-2'
#     stackName: 'vpc-stack'
